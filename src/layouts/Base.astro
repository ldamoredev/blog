---
import type { SiteMeta } from "@/data/siteMeta";
import BaseHead from "@/components/BaseHead";
import ThemeProvider from "@/components/ThemeProvider";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";
import SkipLink from "@/components/SkipLink";
import { siteConfig } from "@/site-config";

interface Props {
	meta: SiteMeta;
}

const {
	meta: { title, description = siteConfig.description, ogImage, articleDate },
} = Astro.props;
---

<html lang={siteConfig.lang}>
	<head>
		<BaseHead title={title} description={description} ogImage={ogImage} articleDate={articleDate} />
	</head>
	<body>
		<ThemeProvider />
		<SkipLink />
		<Header />
		<main id="main" class="flex-1">
			<slot />
		</main>
		<Footer />
	</body>


	<script>
			let copyButtonLabel = "Copy Code";
		let codeBlocks = Array.from(document.querySelectorAll("pre"));

		for (let codeBlock of codeBlocks) {
			let wrapper = document.createElement("div");
			wrapper.style.position = "relative";

			let copyButton = document.createElement("button");
			copyButton.className = "copy-code";
			copyButton.innerHTML = copyButtonLabel;

			codeBlock.setAttribute("tabindex", "0");
			codeBlock.appendChild(copyButton);
			// wrap codebock with relative parent element
			codeBlock.parentNode.insertBefore(wrapper, codeBlock);
			wrapper.appendChild(codeBlock);

			copyButton.addEventListener("click", async () => {
				await copyCode(codeBlock, copyButton);
			});
		}

		async function copyCode(block, button) {
			let code = block.querySelector("code");
			let text = code.innerText;

			await navigator.clipboard.writeText(text);

			// visual feedback that task is completed
			button.innerText = "Code Copied";

			setTimeout(() => {
				button.innerText = copyButtonLabel;
			}, 700);
		}

	</script>
</html>
